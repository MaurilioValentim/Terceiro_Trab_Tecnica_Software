#include "driverlib.h"
#include "board.h"
#include "shared_vars.h"

#define B0 0.001033F
#define B1 0.000767F
#define B2 -0.000266F
#define A1 -1.521886F
#define A2 0.521886F

#define REF 20
#define UL 1
#define LL 0

// Priodo do PWM, mesmo do Sysconfig
#define EPWM_PERIOD 2500.0f

// Constantes do Controle
float x[3];
float y[3];

// Constantes para ver os valores
float32_t vo;
float d;
uint16_t adc;

__interrupt void Cla1Task1()
{
    // Recebe a tensão de saida do DAC
    adc = ADC_readResult(ADC0_RESULT_BASE, ADC0_SOC0);
    // Converte para o valor real
    float32_t vo_adc = adc * (float32_t) ADC_TESTE;
    vo =  vo_adc;
    //==========================================
    //Controle
    //==========================================
    x[2] = x[1]; x[1] = x[0]; x[0] = REF - vo_adc;
    y[2] = y[1]; y[1] = y[0];
    y[0] = B0*x[0] + B1*x[1] + B2*x[2] - A1*y[1] - A2*y[2];

    y[0] = (y[0] > UL) ? UL : y[0];
    y[0] = (y[0] < LL) ? LL : y[0];

    d = y[0];

    //Atualiza o D do PWM
    EPWM_setCounterCompareValue(myEPWM0_BASE,EPWM_COUNTER_COMPARE_A, (uint16_t) (d*EPWM_PERIOD));

}
